<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ú–æ–µ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ</title>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #6e8efb, #a777e3);
            margin: 0;
            padding: 20px;
            color: #333;
            min-height: 100vh;
        }
        
        .container {
            max-width: 100%;
            margin: 0 auto;
        }
        
        .header {
            text-align: center;
            margin-bottom: 20px;
            padding: 20px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 15px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        
        .goal-card {
            background: white;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 15px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .goal-title {
            font-weight: bold;
            font-size: 18px;
            margin-bottom: 8px;
            color: #2c3e50;
        }
        
        button {
            background: #6e8efb;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 8px;
            margin-right: 10px;
            cursor: pointer;
            font-size: 14px;
        }
        
        input, textarea {
            width: 100%;
            padding: 12px;
            margin-bottom: 12px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
        }
        
        .form-add {
            background: rgba(255, 255, 255, 0.9);
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 20px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        
        .btn-delete {
            background: #ff6b6b;
        }
        
        .btn-complete {
            background: #4caf50;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìä –ú–æ–µ –°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ</h1>
            <p>–î–æ—Å—Ç–∏–≥–∞–π—Ç–µ —Ü–µ–ª–∏ –ø—Ä—è–º–æ –≤ Telegram!</p>
        </div>
        
        <div class="form-add">
            <input type="text" id="goalTitle" placeholder="–ù–æ–≤–∞—è —Ü–µ–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ò–∑—É—á–∏—Ç—å JavaScript)">
            <textarea id="goalDescription" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–ª–∏" rows="2"></textarea>
            <button id="addGoal">‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å</button>
        </div>
        
        <div id="goalsList">
            <!-- –¶–µ–ª–∏ –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –∑–¥–µ—Å—å -->
        </div>
    </div>

    <script>
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ –≤ Telegram
        let tg;
        if (window.Telegram && window.Telegram.WebApp) {
            tg = window.Telegram.WebApp;
            tg.expand();
            tg.enableClosingConfirmation();
            tg.MainButton.setText('–ó–∞–∫—Ä—ã—Ç—å').show().onClick(function() {
                tg.close();
            });
        }
        
        // –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        let goals = JSON.parse(localStorage.getItem('tg_goals')) || [];
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        document.addEventListener('DOMContentLoaded', function() {
            renderGoals();
            
            document.getElementById('addGoal').addEventListener('click', function() {
                const title = document.getElementById('goalTitle').value.trim();
                const description = document.getElementById('goalDescription').value.trim();
                
                if (title) {
                    const newGoal = {
                        id: Date.now(),
                        title: title,
                        description: description,
                        completed: false,
                        createdAt: new Date().toLocaleDateString('ru-RU')
                    };
                    
                    goals.push(newGoal);
                    localStorage.setItem('tg_goals', JSON.stringify(goals));
                    renderGoals();
                    
                    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
                    document.getElementById('goalTitle').value = '';
                    document.getElementById('goalDescription').value = '';
                    
                    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    if (tg) {
                        tg.showPopup({
                            title: '‚úÖ –¶–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∞!',
                            message: '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å'
                        });
                    } else {
                        alert('–¶–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∞: ' + title);
                    }
                }
            });
        });
        
        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ü–µ–ª–µ–π
        function renderGoals() {
            const goalsList = document.getElementById('goalsList');
            goalsList.innerHTML = '';
            
            if (goals.length === 0) {
                goalsList.innerHTML = '<div class="goal-card" style="text-align: center; color: #666;">üéØ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ü–µ–ª–µ–π. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é!</div>';
                return;
            }
            
            goals.forEach(goal => {
                const goalElement = document.createElement('div');
                goalElement.className = 'goal-card';
                goalElement.innerHTML = `
                    <div class="goal-title">${goal.completed ? '‚úÖ ' : 'üìå '}${goal.title}</div>
                    <div>${goal.description || ''}</div>
                    <div style="margin-top: 15px;">
                        <button class="btn-complete" onclick="toggleGoal(${goal.id})">
                            ${goal.completed ? '‚Ü©Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å' : '‚úÖ –í—ã–ø–æ–ª–Ω–∏—Ç—å'}
                        </button>
                        <button class="btn-delete" onclick="deleteGoal(${goal.id})">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                    </div>
                    <div style="margin-top: 10px; font-size: 12px; color: #888;">
                        –î–æ–±–∞–≤–ª–µ–Ω–æ: ${goal.createdAt}
                    </div>
                `;
                
                goalsList.appendChild(goalElement);
            });
        }
        
        // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        window.toggleGoal = function(id) {
            goals = goals.map(goal => {
                if (goal.id === id) {
                    goal.completed = !goal.completed;
                    if (goal.completed && tg) {
                        tg.showPopup({
                            title: 'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!',
                            message: '–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —Ü–µ–ª—å: ' + goal.title
                        });
                    }
                }
                return goal;
            });
            
            localStorage.setItem('tg_goals', JSON.stringify(goals));
            renderGoals();
        };
        
        window.deleteGoal = function(id) {
            if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ü–µ–ª—å?')) {
                goals = goals.filter(goal => goal.id !== id);
                localStorage.setItem('tg_goals', JSON.stringify(goals));
                renderGoals();
            }
        };
    </script>
</body>
</html>
